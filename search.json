[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EPPS 6356 Data Visualization",
    "section": "",
    "text": "Welcome to my personal website, which has been created as part of the EPPS 6356 Data Visualization class for the 2024 Fall semester at The University of Texas at Dallas.\n\n\n\nUT Dallas"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Americo Gamarra",
    "section": "",
    "text": "Education\n\nPhD in Geospatial Information Sciences at The University of Texas at Dallas.\nMaster’s Degree in Geographic Information Systems at Penn State University\nInformatics Engineering at Universidad Nacional San Antonio de Abad\n\n\n\nTA Experience\nTeacher Assistant experience in these classes:\n\nRemote Sensing\nInternet Mapping\nAdvanced Data Analysis\nUrban Population\n\n\n\nPublications\n…"
  },
  {
    "objectID": "assignment01.html",
    "href": "assignment01.html",
    "title": "Assignment 01",
    "section": "",
    "text": "2. Google “generative art”. Cite some examples\n\nAt the Forefront of Generative Art with Hieroglyphica\nAt the Forefront of Generative Art with Hieroglyphica\n\n\n\ngen ai\n\n\nApplying Visual Design Principles to Generative Art\nApplying Visual Design Principles to Generative Art\n\n\n\nGen art\n\n\nGenerative Art Economies\nGenerative Art Economies\n\n\n\ngenerative-art-economies\n\n\n\n\n\n3. Run Fall.R Experience\nColor –> orange1:\n\n\n\nfall orange\n\n\n\n\n4. Write a critique on a chart in published work (book/article/news website)\nSouth Korea Population Density and Demographics\n\n\n\nvisualization example\n\n\nCritique\nStrengths:\n\nClarity and Readability: The visualizations are clear and easy to read, with well-chosen colors and labels that make the data accessible.\nInteractive Elements: The use of interactive elements allows users to explore the data in more depth, which can enhance understanding and engagement.\nComprehensive Data: The visualizations cover a wide range of demographic data, providing a comprehensive overview of South Korea’s population.\n\nAreas for Improvement:\n\nOvercrowding of Information: Some charts may appear cluttered with too much information, which can overwhelm the viewer and make it difficult to extract key insights."
  },
  {
    "objectID": "assignment02.html",
    "href": "assignment02.html",
    "title": "Assignment 02",
    "section": "",
    "text": "2. Can you generate these charts individually? Try these functions using another dataset.\n\n# Exercise: Can you generate these charts individually?  \n# Try these functions using another dataset. \n# Be sure to work on the layout and margins\n\n# Libraries\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\nlibrary(rgl)\nlibrary(RColorBrewer)\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Load data\ndf_hpi <- read.csv(\"assignment02/HPI_2021_public_dataset.csv\")\nhead(df_hpi)\n\n  HPI_rank     Country ISO YearCtry Continent Population LifeExpectancy\n1       NA     Burundi BDI  2021BDI         5  12551.213         61.663\n2       NA       Sudan SDN  2021SDN         5  45657.202         65.267\n3        1     Vanuatu VUT  2021VUT         8    319.137         70.449\n4        2      Sweden SWE  2021SWE         3  10467.097         82.983\n5        3 El Salvador SLV  2021SLV         1   6314.167         70.748\n6        4  Costa Rica CRI  2021CRI         1   5153.957         77.023\n  LadderOfLife_Wellbeing CarbonFootprint_tCO2e      HPI\n1                     NA             0.6527308       NA\n2                     NA             0.8727170       NA\n3               7.121429             2.6163893 57.86116\n4               7.439280             8.6980459 55.93532\n5               6.431447             2.0284885 54.67388\n6               6.408448             4.3699376 54.13215\n  CO2_threshold_year_tCO2e GDP_per_capita_usd\n1                 3.172217           714.0667\n2                 3.172217          3701.0691\n3                 3.172217          2800.4939\n4                 3.172217         53771.9813\n5                 3.172217          9191.6040\n6                 3.172217         21189.6957\n\ncolnames(df_hpi)\n\n [1] \"HPI_rank\"                 \"Country\"                 \n [3] \"ISO\"                      \"YearCtry\"                \n [5] \"Continent\"                \"Population\"              \n [7] \"LifeExpectancy\"           \"LadderOfLife_Wellbeing\"  \n [9] \"CarbonFootprint_tCO2e\"    \"HPI\"                     \n[11] \"CO2_threshold_year_tCO2e\" \"GDP_per_capita_usd\"      \n\n\n\n# 1) Scatterplot\nplot(df_hpi$LifeExpectancy, df_hpi$CarbonFootprint_tCO2e, pch = 20, col = \"steelblue\",  main = \"Carbon Footprint vs Life Expectancy \", xlab = \"Life Expectancy in years\", ylab = \"Carbon Footprint in tons of CO2 equivalent\", ylim = c(-5, 50),  yaxt = 'n', yaxs = 'i')\naxis(2, at = seq(0 , 40, by = 10), labels = c('0', '', '20', '', '40' ))\n\n\n\n\n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\ndf_mostPop <- head(df_hpi[order(df_hpi$Population, decreasing= T),], n = 5)\ndf_leastPop <- head(df_hpi[order(df_hpi$Population, decreasing= F),], n = 5)\n\n# 1)  Scatterplot\n\nx <- c(1, 2, 3, 4, 5)\ny1 <- c(df_mostPop$LifeExpectancy)\ny2 <- c(df_leastPop$LifeExpectancy)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(50, 100))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 5, 1)) # What is the first number standing for?\naxis(2, at=seq(50, 100, 10))\n#axis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"5 Most/Least Populated Countries\", side=1, line=2, cex=0.8)\nmtext(\"Life Expectaancy\", side=2, line=2, las=0, cex=0.8)\n#mtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(3, 98, \"Least Populated\")\ntext(3, 55, \"Most Populated\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# 2)  Histogram\n\npar(mar=c(4.5, 4.1, 3.1, 0))\nY <- na.omit(df_hpi$LifeExpectancy)\nres <- hist(Y, breaks=seq(50,100,5), plot=FALSE)\nhist(Y, breaks=seq(50,100,5), ylim=c(0, 0.1), \n     col=\"gray80\", prob=TRUE,\n     main = \"Histogram of Life Expectancy\",\n     xlab = \"Life Expectancy\")\nlines(density(Y), col = \"black\", lwd = 2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# 3)  Barplot\n\npar(mar=c(2, 3.1, 2, 2.1)) \ndf_PLLH <- na.omit(df_hpi[c('Population', 'LifeExpectancy', 'LadderOfLife_Wellbeing', 'HPI')])\n\npopLabels <- c('0 to 50M', '50M to 100M', '100M to 200M', '200M to 350M', '350M to 1.5B')\n\npopBreaks <- c(0, 50000, 100000, 200000, 350000, 1500000)\ndf_PLLH <- na.omit(df_hpi[c('Population', 'LifeExpectancy', 'LadderOfLife_Wellbeing', 'HPI')])\ndf_PLLH$PopCategory <- cut(df_PLLH$Population, breaks = popBreaks, right=TRUE, labels = popLabels)\ndf_Mean_PPLH <- aggregate(cbind(LifeExpectancy,LadderOfLife_Wellbeing,HPI) ~ PopCategory, data = df_PLLH, FUN = mean, na.rm = TRUE)\n\ndf_Mean_PPLH2 <- as.matrix(df_Mean_PPLH[c('LifeExpectancy', 'LadderOfLife_Wellbeing', 'HPI')])\n\nmidpts <- barplot(df_Mean_PPLH2, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 3))\nmtext(sub(\" \", \"\\n\", colnames(df_Mean_PPLH2)),\n      at=midpts, side=1, line=0.5, cex=0.5)\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# 4)  Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(Population/1e3 ~ Continent, data = df_hpi,\n        boxwex = 0.25, col=\"white\",\n        xlab=\"\", ylab=\"Continent\", ylim=c(0,350))\nmtext(\"Population (Millions) by Continent\", side=1, line=2.5, cex=0.8)\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# 5)  Persp\n\ndf_LGH <- na.omit(df_hpi[c('LifeExpectancy', 'GDP_per_capita_usd', 'HPI')])\n\nx <- df_LGH$LifeExpectancy\ny <- df_LGH$GDP_per_capita_usd\nz <- df_LGH$HPI\n\nx <- seq(min(x, na.rm = TRUE), max(x, na.rm = TRUE), length = 30)\ny <- seq(min(y, na.rm = TRUE), max(y, na.rm = TRUE), length = 30)\nf <- function(x,y) { return((x + y) / 2) }\nz <- outer(x, y, f)\n\n\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30,\n      xlab = \"Life Expectancy\", ylab = \"GDP per Capita\", zlab = \"HPI\")\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# 6)  Piechart\n\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\n\ndf_CP <- na.omit(df_hpi[c('Continent', 'Population')])\ndf_Sum_Pop <- aggregate(Population ~ Continent, data = df_CP, FUN = sum, na.rm = TRUE)\ntotPop <- sum(df_Sum_Pop$Population)\ndf_Sum_Pop$PctPop <- (df_Sum_Pop$Population * 100 / totPop)\n\npctPop <- c(df_Sum_Pop$PctPop)\nnames(pctPop) <- c(df_Sum_Pop$Continent)\npie(pctPop, col = gray(seq(0.3,1.0,length=8)))"
  },
  {
    "objectID": "assignment03.html",
    "href": "assignment03.html",
    "title": "Assignment 03 + Pre Hackaton",
    "section": "",
    "text": "2. Rerun anscombe01.R.\n\na. Compare the regression models\n\ndata(anscombe) \ncolnames(anscombe)\n\n[1] \"x1\" \"x2\" \"x3\" \"x4\" \"y1\" \"y2\" \"y3\" \"y4\"\n\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n\n\n#  calculate regression models\n\nlm1 <- lm(y1 ~ x1, data=anscombe)\nlm2 <- lm(y2 ~ x2, data=anscombe)\nlm3 <- lm(y3 ~ x3, data=anscombe)\nlm4 <- lm(y4 ~ x4, data=anscombe)\n\n#  list summaries of the four models\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\n\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# plot regression models\nplot(anscombe$x1,anscombe$y1, xlab='x1', ylab='y1', main='lm1')\nabline(coefficients(lm1))\nplot(anscombe$x2,anscombe$y2, xlab='x2', ylab='y2', main='lm2')\nabline(coefficients(lm2))\nplot(anscombe$x3,anscombe$y3, xlab='x3', ylab='y3', main='lm3')\nabline(coefficients(lm3))\nplot(anscombe$x4,anscombe$y4, xlab='x4', ylab='y4', main='lm4')\nabline(coefficients(lm4))\n\n\n\n\nComment:\nAll models (lm1, lm2, lm3, lm4) show the value of 0.66 for Multiple R Squared\nAll models (lm1, lm2, lm3, lm4) show the value of 0.62 for Adjusted R Square. The 62% of the variation in dependent variable can be explained by the independent variables for each of the four models.\nGraphics show models are different. Fourth model lm4 has outlier case(s).\nSecond model lm2 looks to be a polynomial curve.\n\n\nb. Compare different ways to create the plots (e.g. changing colors, line types, plot, characters)\nPlots can be fine-tuned by adjusting colors, point shapes, trendline styles, axis labels, and backgrounds. These customizations can be done manually without any packages, or by using the tidyverse or ggplot packages. Changing a theme can alter the background color and the appearance of other plot elements.\n\n\n\n3. Can you finetune the charts without using other packages (consult RGraphics by Murrell)?\na. Use a serif font\nb. Try non-default colors\nc. Use own plotting character\n\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0), family = 'serif', col=\"gray50\", fg=\"gray50\", bg= \"white\", col.axis=\"gray50\")\n\n# plot regression models\nplot(anscombe$x1,anscombe$y1, xlab='x1', ylab='y1', main='lm1', \n     pch = 21, bg = \"steelblue1\", col = 'blue', cex = 2)\npoints(anscombe$x1,anscombe$y1,pch = 20, col = \"black\")\nabline(coefficients(lm1), col=\"dodgerblue1\") \n\nplot(anscombe$x2,anscombe$y2, xlab='x2', ylab='y2', main='lm2',\n     pch = 21, bg = 'red', col = \"firebrick3\", cex = 2)\npoints(anscombe$x2,anscombe$y2,pch = 20, col = \"black\")\nabline(coefficients(lm2), col=\"firebrick1\")\n\nplot(anscombe$x3,anscombe$y3, xlab='x3', ylab='y3', main='lm3',\n     pch = 21, bg = 'darkslategray1', col = \"darkslategrey\", cex = 2)\npoints(anscombe$x3,anscombe$y3,pch = 20, col = \"black\")\nabline(coefficients(lm3), col=\"darkslategray4\")\n\nplot(anscombe$x4,anscombe$y4, xlab='x4', ylab='y4', main='lm4',\n     pch = 21, bg = 'gold', col = \"gold3\", cex = 2)\npoints(anscombe$x4,anscombe$y4,pch = 20, col = \"black\")\nabline(coefficients(lm4), col=\"gold\")\n\n\n\n\n\n\n4. How about with ggplot2? (use tidyverse package)\n\nlibrary(tidyverse)\n\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0), family = 'serif', col=\"gray50\", fg=\"gray50\", bg= \"white\", col.axis=\"gray50\")\n\nplot_lm1 <- ggplot(anscombe, aes(x=x1, y=y1)) + \n    geom_point(na.rm=FALSE, shape = 21, fill = \"steelblue1\", color = \"blue\", size = 3) + \n  geom_point(na.rm=FALSE, shape = 20, color = \"black\", size = 2) + \n    theme_classic() + scale_size(range = c(0.25,4)) + \n    geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue1', linewidth = 0.8) + \n    labs(x = \"X1\", y = \"Y1\") \n\nplot_lm2 <- ggplot(anscombe, aes(x=x2, y=y2)) + \n    geom_point(na.rm=FALSE, shape = 21, fill = \"red\", color = \"firebrick3\", size = 3) + \n    geom_point(na.rm=FALSE, shape = 20, color = \"black\", size = 2) + \n    theme_classic() + scale_size(range = c(0.25,4)) + \n    geom_abline(intercept = coef(lm2)[1], slope = coef(lm2)[2], color = 'firebrick1', linewidth = 0.8) + \n    labs(x = \"X1\", y = \"Y1\") \n\nplot_lm3 <- ggplot(anscombe, aes(x=x3, y=y3)) + \n    geom_point(na.rm=FALSE, shape = 21, fill = \"darkslategray1\", color = \"darkslategrey\", size = 3) + \n    geom_point(na.rm=FALSE, shape = 20, color = \"black\", size = 2) + \n    theme_classic() + scale_size(range = c(0.25,4)) + \n    geom_abline(intercept = coef(lm3)[1], slope = coef(lm3)[2], color = 'darkslategray4', linewidth = 0.8) + \n    labs(x = \"X1\", y = \"Y1\") \n\nplot_lm4 <- ggplot(anscombe, aes(x=x4, y=y4)) + \n    geom_point(na.rm=FALSE, shape = 21, fill = \"gold\", color = \"gold3\", size = 3) + \n    geom_point(na.rm=FALSE, shape = 20, color = \"black\", size = 2) + \n    theme_classic() + scale_size(range = c(0.25,4)) + \n    geom_abline(intercept = coef(lm4)[1], slope = coef(lm4)[2], color = 'gold', linewidth = 0.8) + \n    labs(x = \"X1\", y = \"Y1\")\n\ngridExtra::grid.arrange(plot_lm1, plot_lm2, plot_lm3, plot_lm4)\n\n\n\n\n\n\n5. Pre-Hackaton\nGeoVis team work (originally published in Team’s lead page)\nPre Hackathon (ummekulsum-muna.github.io)\n\n# libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\nlibrary(scales)\n\n# Load the data from OWID GitHub\nowideu <- read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n\n# Deselect cases/rows with OWID\nowideu <- owideu[!grepl(\"^OWID\", owideu$iso_code), ]\n\n# Subset data for Europe\nowideu <- subset(owideu, continent == \"Europe\")\n\n# Convert the date column to Date type\nowideu$date <- as.Date(owideu$date)\n\n# Extract the year and month from the date\nowideu$year <- format(owideu$date, \"%Y\")\nowideu$month <- format(owideu$date, \"%m\")\n\n# Further subset the data to remove zero deaths and dates before 2024-01-20\ntt <- subset(owideu, new_deaths != 0 & date < \"2024-01-20\")\n\n# Subset the data for specific countries and years, focusing on Germany 2020 and December 2022\noutliers <- tt %>%\n  filter((location == \"Spain\" & year == \"2020\") |\n           (location == \"Germany\" & (year == \"2020\" | (year == \"2022\" & month == \"12\"))) |\n           (location == \"Ukraine\" & year == \"2021\") |\n           (location == \"Italy\" & year == \"2024\"))\n\n# For Spain 2020, select the highest and 3rd highest new deaths, and for others, select the highest\noutliers <- outliers %>%\n  group_by(location, year) %>%\n  filter((location == \"Spain\" & year == \"2020\" & new_deaths %in% sort(new_deaths, decreasing = TRUE)[c(1, 3)]) |\n           (location != \"Spain\" & new_deaths == max(new_deaths, na.rm = TRUE))) %>%\n  ungroup()\n\n# Create the base ggplot\nggplot() +\n  # Germany points (all data for Germany for context)\n  geom_point(data = subset(tt, location == \"Germany\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # Spain points\n  geom_point(data = subset(tt, location == \"Spain\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # Ukraine points\n  geom_point(data = subset(tt, location == \"Ukraine\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # France points\n  geom_point(data = subset(tt, location == \"France\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # All points scaled down by a factor of 6\n  geom_point(data = tt, aes(x = as.Date(date), y = new_deaths / 6), color = \"violetred1\", size = 1.4) +\n  \n  # Customize the axes and labels\n  labs(x = \"Dates\", y = \"COVID Deaths in Europe (Daily)\") +\n  \n  # Customize the date axis and set dynamic date breaks\n  scale_x_date(labels = date_format(\"%Y-%m\"), breaks = pretty_breaks(n = 30)) +\n  \n  # Custom y-axis with breaks up to 6000\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000), limits = c(0, 6500),\n                     labels = c(\"0\", \"1000\", \"\", \"3000\", \"\", \"5000\", \"\")) +\n  \n  # Apply a minimal theme with customizations for better aesthetics\n  theme_minimal(base_family = \"Palatino\") +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, family = \"Palatino\"),\n    axis.text.y = element_text(family = \"Palatino\"),\n    axis.title.x = element_text(family = \"Palatino\"),\n    axis.title.y = element_text(family = \"Palatino\"),\n    panel.grid = element_blank(),  # Remove background grid\n    panel.border = element_rect(fill = NA, color = \"black\"),  # Make axis lines are visible\n    axis.ticks.y = element_line(color = \"black\"),  # Show y-axis ticks\n    axis.ticks.length.y = unit(3, \"mm\"),  # Lengthen y-axis ticks\n    axis.ticks.x = element_blank()  # Remove x-axis ticks\n  ) +\n  \n  # Adding labels for the outliers\n  geom_text(data = outliers, aes(x = as.Date(date), y = new_deaths, label = location), \n            vjust = 0, hjust = -0.1, color = \"black\", size = 3, family = \"Palatino\")  # Position the label to the right of the point"
  },
  {
    "objectID": "assignment04.html",
    "href": "assignment04.html",
    "title": "Assignment 04 Hackaton",
    "section": "",
    "text": "2. Synergy Report\nIntroduction\nThis report outlines the team work done by the members of team GeoVIS. The purpose of this collaboration is to participate in the hackathon in EPPS 6356 course by Dr. Karl Ho.\n\n\nMembers\n\nAmerico Gamarra\nBrennan Stout\nChangho Lee and\nUmme Kulsum (Coorndinator)\n\n\n\nCollaborative Process\nThe hackathon required us to work with our own data and create 4 charts based on the samples provided.\n\nDiscussion regarding data: In class, all members.\n\nChangho and Brennan provided some data sources which we all looked at and discussed about\nChangho suggested to use the mpg data already available in R\nEveryone supported that\nCoordinator suggested members that they could look into other dataset too but they should get started with what they had and if need be, the codes could be employed to a new dataset\nThere were still some confusions, Changho stayed behind in class and talked with the Professor to clear that and later informed the other members\n\n\n\nGetting Started\n\nBrennan and Umme started working on the charts that night\nBrennan created the base for chart 1 and started working on chart 2\nUmme completed chart 3 and 4\n\n\n\nFine-tuning\n\nChangho inspected all charts and provided feedback\nThere was confusion about the contents of chart 2\nChangho redid the chart 2 and compiled the codes in a single file\nBrennan fine-tuned the fonts and sizes\nUmme fine-tuned the colors\nBefore and after changing anything, members took each other’s approval\n\n\n\n\nSynergistic Effect\nThe team had created a base for all the charts within 3 hours after the class. Chart 2 was a bit confusing to Brennan and Umme. Discussing about the materials provided by Dr. Karl Ho among themselves helped clearing that confusion. Therefore, new things were learned. Each team member would get feedback from the others after completing each task and tried to implement those.\n\n\nResult and Outcome\n\nCompleting the hackathon ahead of time\nTeam bonding became stronger\nEach member got the opportunity to enrich the knowledge of R programming and data analysis\n\n\n\nSubmission and synergy report Writing: Umme Kulsum"
  },
  {
    "objectID": "assignment05.html",
    "href": "assignment05.html",
    "title": "Assignment 05",
    "section": "",
    "text": "2. Repeat 1 using ggplot2, with your own style.\n\nlibrary(ggplot2)\n\n# ggplot2 - Histogram of mpg in mtcars\nggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(fill = \"lightblue\", color = \"blue\", bins = 10) +\n  ggtitle(\"Histogram of Miles per Gallon (mpg)\") +\n  xlab(\"Miles per Gallon\") +\n  ylab(\"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n# ggplot2 - Vertical Barplot of Cylinders\nggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar(fill = \"orange\", color = \"red\") +\n  ggtitle(\"Barplot of Cylinders (Vertical)\") +\n  xlab(\"Cylinders\") +\n  ylab(\"Count\") +\n  theme_minimal()\n\n\n\n# ggplot2 - Horizontal Barplot of Cylinders\nggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar(fill = \"lightgreen\", color = \"green\") +\n  coord_flip() +\n  ggtitle(\"Barplot of Cylinders (Horizontal)\") +\n  xlab(\"Count\") +\n  ylab(\"Cylinders\") +\n  theme_minimal()\n\n\n\n\n\n# ggplot2 - Pie Chart of Cylinders\nggplot(mtcars, aes(x = \"\", fill = factor(cyl))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\") +\n  ggtitle(\"Pie Chart of Cylinder Counts\") +\n  theme_void() +\n  scale_fill_manual(values = c(\"red\", \"blue\", \"green\"))\n\n\n\n\n\n# ggplot2 - Boxplot of mpg by cylinders\nggplot(mtcars, aes(x = factor(cyl), y = mpg, fill = factor(cyl))) +\n  geom_boxplot() +\n  ggtitle(\"Boxplot of MPG by Cylinders\") +\n  xlab(\"Cylinders\") +\n  ylab(\"Miles per Gallon\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"pink\", \"yellow\", \"lightblue\"))\n\n\n\n\n\n# ggplot2 - Scatterplot of mpg vs hp\nggplot(mtcars, aes(x = mpg, y = hp)) +\n  geom_point(color = \"purple\", size = 3) +\n  ggtitle(\"Scatterplot of MPG vs Horsepower\") +\n  xlab(\"Miles per Gallon\") +\n  ylab(\"Horsepower\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\nBase R functions provide a simple way to create plots but offer limited styling options.\nggplot2 provides greater flexibility and customization options, allowing for more refined visualizations\n\n\n\n\n3. Export the charts using different formats such as:\na. .pdf\nb. .jpg\nc. .svg\nd. .tiff\ne. .bmp\n\nComment\n\nTIFF image format is not compressed and has most of the details\nJPG image format is the most compressed but quality still good\nPDF is the smallest file and quality is good to print and share"
  },
  {
    "objectID": "assignment06.html",
    "href": "assignment06.html",
    "title": "Assignment 06",
    "section": "",
    "text": "b. Build a Shiny app using the following datasets (in datasets library):\ni. mtcars\nhttps://americogamarra.shinyapps.io/mtcarsApp/\n\nii. USArrests\nhttps://americogamarra.shinyapps.io/USArrests/\n\niii. uspop\nhttps://americogamarra.shinyapps.io/uspop/\n\n\n\nd. Build a Shiny app loaded with your own data sets\nhttps://americogamarra.shinyapps.io/GeoViz1/"
  }
]